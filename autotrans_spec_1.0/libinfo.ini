[code]
; Pattern: operator_tag = parameter requirements
; operator is the op_name in test_info.json
; default tag is "method1"
; Parameter pattern: source_file_parameter_name-test_info_parameter_name

Add_method1 = WIDTH_ADDEND-input_shape[0][0], ADDER_NUM-input_shape[0][1], DIMENTION-input_shape[0][2]

Add_test = WIDTH_ADDEND-input_shape[0][0], ADDER_NUM-input_shape[0][1], DIMENTION-input_shape[0][2]

Gelu_method1 = x_WIDTH-input_shape[0][0], GELU_NUM-input_shape[0][1], DIMENTION-input_shape[0][2] 
               ;TODO

Layernorm_method1 = INPUT_WIDTH-input_shape[0][0], SENTENCE_NUM-input_shape[0][1],
                    INPUT_NUM-input_shape[0][2] 
                    ;revision needed

Softmax_method1 = DATA_WIDTH-input_shape[0][0], MATRIX_NUM-input_shape[0][1],
                  INPUT_SHAPE_1-input_shape[0][2], INPUT_SHAPE_2-input_shape[0][3] 
                  ;empty file
                  
Transpose_method1 = DATA_WIDTH-input_shape[0][0], INPUT_SHAPE_1-input_shape[0][1],
                    INPUT_SHAPE_2-input_shape[0][2], INPUT_SHAPE_3-input_shape[0][3],
                    OUTPUT_SHAPE_1-output_shape[0][1], OUTPUT_SHAPE_2-output_shape[0][2],
                    OUTPUT_SHAPE_3-output_shape[0][3] 
                    ;revision needed

Split_method1 = DATA_WIDTH-input_shape[0][0], INPUT_SHAPE_1-input_shape[0][1],
                INPUT_SHAPE_2-input_shape[0][2], OUTPUT_SHAPE_1-output_shape[0][1],
                OUTPUT_SHAPE_2-output_shape[0][2], OUTPUT_SHAPE_3-output_shape[0][3],
                NUM_WIDTH-input_shape[1] 
                ;empty file

Merge_method1 = DATA_WIDTH-input_shape[0][0], INPUT_SHAPE_1-input_shape[0][1],
                INPUT_SHAPE_2-input_shape[0][2], INPUT_SHAPE_3-input_shape[0][3],
                OUTPUT_SHAPE_1-output_shape[0][1], OUTPUT_SHAPE_2-output_shape[0][2],
                NUM_WIDTH-input_shape[1] 
                ;empty file

MatMul_method1 = DATA_WIDTH-input_shape[0][0], MATMUL_NUM-input_shape[0][1],
                 INPUT_SHAPE_1_1-input_shape[0][2], INPUT_SHAPE_1_2-input_shape[0][2],
                 INPUT_SHAPE_2_2-input_shape[1][2] 
                 ;empty file

MAC_method1 = DATA_WIDTH-input_shape[1][0], INPUT_SHAPE_1_1-input_shape[1][1],
              INPUT_SHAPE_1_2-input_shape[1][2], INPUT_SHAPE_2_2-input_shape[0][1] 
              ;empty file

[gen]
mm_tensorlib = input_shape, output_shape


[gen_hls]
mm_hls = input_shape, output_shape



